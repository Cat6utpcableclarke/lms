type Fine {
  fine_id: ID!
  patronId: ID!
  bookId: ID!
  daysLate: Int!
  ratePerDay: Float!
  amount: Float!
  createdAt: String!
}

type Subscription {
  fineCreated: Fine!
}

type Query {
  getFine(fine_id: ID!): Fine
  listFines: [Fine!]!
}

type Mutation {
  createFine(patronId: ID!, bookId: ID!, ratePerDay: Float!): Fine!
  updateFine(fine_id: ID!, daysLate: Int!, ratePerDay: Float!): Fine!
  deleteFine(fine_id: ID!): Boolean!
}

type Book {
  id: String!
  title: String!
  author_name: String!
  date_published: String! # ISO 8601 format (YYYY-MM-DD)
  description: String!
  image:String!
}

type Author {
  id: Int!
  author_name: String!
}

type Book_copies {
  id:ID!
  book_id: String!
  title: String!
  author_name: String!
  date_published: String! # ISO 8601 format (YYYY-MM-DD)
  description: String!
  book_status:String!
}


input BookFilter {
  title: String
  author_name: String
  date_published: String
}

type Subscription {
  bookAdded: Book! # Notifies when a new book is added
}

type Query {
  getBooks:[Book!]!
  getAuthor:[Author!]!
  getBookCopies:[Book_copies!]!
  getFilteredBooks(filter: BookFilter): [Book!]! # Filter books based on criteria
  getBookById(id: String!): Book
  getBookCopiesById(id: String!):[Book_copies!]!
  searchBooks(query: String!): [Book!]! # Search books by title or author
  getAvailbleBookCopyByID(id:String!):Book_copies!
}

type Mutation {
  addBook(title: String!, author_name: String!, datePublished: String!,description:String! , image: String): Book!
  addBCopy(book_id:String!): Book_copies!
  addAuthor(author_name:String!): Author!
  updateBook(id: ID!, title: String, author_name:String!, datePublished: String, description:String): Book!
  updateBookCopyStatus(id: ID!, book_status:String):Book_copies!
  deleteBook(id: ID!): Boolean!
  deleteBCopy(id: ID!): Boolean!
  deleteAuthor(id: ID!): Boolean!
}

